#!/usr/bin/env python

from math import * # same as using include and namespace
import sys
from fractions import Fraction

if len(sys.argv) != 5 :
     print("riemanSum [f] [begin] [end] [interals]")
     exit()

functionarg = sys.argv[1]
lowerbound = Fraction(sys.argv[2])
upperbound = Fraction(sys.argv[3])
intervals = eval(sys.argv[4])
function = lambda x: eval(functionarg) 

def leftSideSum (start, end, intervals):
    deltaX = (end - start)/float(intervals) 
    rightPush = 0
    Sum = 0
    i = 0
    while i < intervals:
        Sum += function(start+rightPush)*deltaX
        start += deltaX
        i += 1
    return Sum

def rightSideSum (start, end, intervals):
    deltaX = (end - start)/float(intervals) 
    rightPush = deltaX
    Sum = 0
    i = 0
    while i < intervals:
        Sum += function(start+rightPush)*deltaX
        start += deltaX
        i += 1
    return Sum

def midSum (start, end, intervals):
    deltaX = (end - start)/float(intervals) 
    rightPush = deltaX/2
    Sum = 0
    i = 0
    while i < intervals:
        Sum += function(start+rightPush)*deltaX
        start += deltaX
        i += 1
    return Sum


print (midSum(lowerbound, upperbound, intervals))

