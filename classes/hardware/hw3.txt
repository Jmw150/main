Jordan Winkler
computer architecture
Sun Jan 27 14:41:03 EST 2019
hw 3

1) Do Exercise 2.2 on page 164 of the textbook.

For the following MIPS assembly instructions above, what is a
corresponding C statement?

add f, g, h
add f, i, f

f = g + h;
f = i + f;

2) Write MIPS code to implement the following C/C++ command:
Spring 2019
j = i * 2;

# j = i * 2;
# s0 = j, a0 = i 

add $s0, $a0, $a0


3) Do Exercise 2.3 on page 165 of the textbook.

For the following C statement, what is the corresponding MIPS assembly code? Assume that the variables f , g , h , i , and j are assigned to registers $s0 , $s1 , $s2 , $s3 , and $s4 , respectively. Assume that the base address of the arrays A and B are in registers $s6 and $s7 , respectively.

B[8] = A[i−j];

# c-code :: B[8] = A[i−j];
# variable names
#f   , g   , h   , i   , j   , A  , B
#$s0 , $s1 , $s2 , $s3 , $s4 , $s6, $s7
    

    sub     $s0, $s3, $s4       # i - j
    add     $s0, $s0, $s0       # adjust the size, 2*[i-j]
    add     $s0, $s0, $s0       # adjust again   , 4*[i-j]
    add     $s0, $s6, $s0       # store total location &A + 4*[i-j]
    lw      $s0, 0($s0)         # f = A[i-j]
    sw      $s0, 32($s7)        # B[8] = f


4) Do Exercise 2.4 on page 165 of the textbook.

For the MIPS assembly instructions below, what is the corresponding C statement? Assume that the variables f , g , h , i , and j are assigned to registers $s0 , $s1 , $s2 , $s3 , and $s4 , respectively. Assume that the base address of the arrays A and B are in registers $s6 and $s7 , respectively.

    sll     $t0, $s0, 2         # $t0 = f * 4
    add     $t0, $s6, $t0       # $t0 = &A[f]
    sll     $t1, $s1, 2         # $t1 = g * 4
    add     $t1, $s7, $t1       # $t1 = &B[g]
    lw      $s0, 0($t0)         # f = A[f]
    addi    $t2, $t0, 4         # $t2 = &A[f*4+4]
    lw      $t0, 0($t2)         # $t0 = A[f*4+4]
    add     $t0, $t0, $s0       # $t0 = A[f*4+4] + A[f]
    sw      $t0, 0($t1)         # B[g] = A[f*4+4] + A[f]

#equivalent c expression
#B[g] = A[f*4+4] + A[f];

5) Assume that register $t0 holds the base address in memory of array ‘A’ and register $t1 holds the base address in memory of array ‘B’. Write MIPS code to swap the contents of A[0] with B[0] and A[1] with B[1].

    # swap the contents of A[0] with B[0] and A[1] with B[1].
    lw      $s0, 0($t0)         # A's out
    lw      $s1, 4($t0)
    lw      $s3, 0($t1)         # B's out
    lw      $s4, 4($t1)
    sw      $s3, 0($t0)         # A's in
    sw      $s4, 4($t0)
    sw      $s0, 0($t1)         # B's in
    sw      $s1, 4($t1)

